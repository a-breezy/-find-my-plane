{"ast":null,"code":"export function searchFlight(iata, flight) {\n  let apiKey = process.env.REACT_APP_FLIGHT_API_KEY; // dynamic query\n  // let flightNumber = flight;\n  // let airlineIata = iata;\n\n  console.log(iata, flight); // hardcoded query\n\n  let flightNumber = 3628;\n  let airlineIata = \"af\";\n  let apiUrl = \"https://app.goflightlabs.com/flights?access_key=\" + apiKey + \"&flight_number=\" + flightNumber + \"&airline_iata=\" + airlineIata;\n  fetch(apiUrl).then(function (response) {\n    // then console log the data\n    response.json().then(function (data) {\n      console.log(data);\n    });\n  });\n}\nexport function searchFlightNumber(flight) {\n  // hardcoded query\n  let flightNumber = 3628; // dynamic query\n  // let flightNumber = flight;\n\n  let apiKey = process.env.REACT_APP_FLIGHT_API_KEY;\n  let apiUrl = \"https://app.goflightlabs.com/flights?access_key=\" + apiKey + \"&flight_number=\" + flightNumber;\n  console.log(apiUrl); // fetch api with hardcoded query\n\n  fetch(apiUrl, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    mode: \"no-cors\"\n  }).then(res => console.log(res)).then(data => console.log(data));\n} // check that flight number is correct\n\nexport function validateSixChar(flightNumber) {\n  var regex = /((^[a-z]{2})(\\d{4}$))/i;\n  return regex.test(String(flightNumber));\n}\nexport function validateFourChar(flightNumber) {\n  var regex = /(\\d{4})/;\n  return regex.test(String(flightNumber));\n} // check that input is valid and send fetch data\n// export function checkValue (flightNumber) {\n// \tlet iata = \"\",\n// \t\tflight = \"\";\n// \tif (flightNumber.length === 4 && validateFourChar(flightNumber)) {\n// \t\t// take away clg\n// \t\tconsole.log(searchFlightNumber(flightNumber));\n// \t\tsetErrorMessage(\"\");\n// \t\treturn (flight = flightNumber);\n// \t} else if (flightNumber.length === 6 && validateSixChar(flightNumber)) {\n// \t\tiata = flightNumber.slice(0, 2);\n// \t\tflight = flightNumber.slice(2, 6);\n// \t\t// take away clg\n// \t\tconsole.log(searchFlight(iata, flight));\n// \t\tsetErrorMessage(\"\");\n// \t\treturn [iata, flight];\n// \t} else if (\n// \t\t!flightNumber.length ||\n// \t\t!validateFourChar(flightNumber) ||\n// \t\t!validateSixChar(flightNumber)\n// \t) {\n// \t\t// console.log(\"set error message\");\n// \t\tsetErrorMessage(\n// \t\t\t\"Flight number must be four numbers or two letters followed by four numbers.\"\n// \t\t);\n// \t}\n// }","map":{"version":3,"names":["searchFlight","iata","flight","apiKey","process","env","REACT_APP_FLIGHT_API_KEY","console","log","flightNumber","airlineIata","apiUrl","fetch","then","response","json","data","searchFlightNumber","method","headers","mode","res","validateSixChar","regex","test","String","validateFourChar"],"sources":["/Users/a.breezy/development/react-projects/find-my-plane/client/src/utils/js/searchFlightFunctions.js"],"sourcesContent":["export function searchFlight(iata, flight) {\n\tlet apiKey = process.env.REACT_APP_FLIGHT_API_KEY;\n\t// dynamic query\n\t// let flightNumber = flight;\n\t// let airlineIata = iata;\n\n\tconsole.log(iata, flight);\n\n\t// hardcoded query\n\tlet flightNumber = 3628;\n\tlet airlineIata = \"af\";\n\n\tlet apiUrl =\n\t\t\"https://app.goflightlabs.com/flights?access_key=\" +\n\t\tapiKey +\n\t\t\"&flight_number=\" +\n\t\tflightNumber +\n\t\t\"&airline_iata=\" +\n\t\tairlineIata;\n\n\tfetch(apiUrl).then(function (response) {\n\t\t// then console log the data\n\t\tresponse.json().then(function (data) {\n\t\t\tconsole.log(data);\n\t\t});\n\t});\n}\n\nexport function searchFlightNumber(flight) {\n\t// hardcoded query\n\tlet flightNumber = 3628;\n\t// dynamic query\n\t// let flightNumber = flight;\n\tlet apiKey = process.env.REACT_APP_FLIGHT_API_KEY;\n\tlet apiUrl =\n\t\t\"https://app.goflightlabs.com/flights?access_key=\" +\n\t\tapiKey +\n\t\t\"&flight_number=\" +\n\t\tflightNumber;\n\n\tconsole.log(apiUrl);\n\t// fetch api with hardcoded query\n\tfetch(apiUrl, {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tmode: \"no-cors\",\n\t})\n\t\t.then((res) => console.log(res))\n\t\t.then((data) => console.log(data));\n}\n\n// check that flight number is correct\nexport function validateSixChar(flightNumber) {\n\tvar regex = /((^[a-z]{2})(\\d{4}$))/i;\n\treturn regex.test(String(flightNumber));\n}\n\nexport function validateFourChar(flightNumber) {\n\tvar regex = /(\\d{4})/;\n\treturn regex.test(String(flightNumber));\n}\n\n// check that input is valid and send fetch data\n// export function checkValue (flightNumber) {\n// \tlet iata = \"\",\n// \t\tflight = \"\";\n\n// \tif (flightNumber.length === 4 && validateFourChar(flightNumber)) {\n// \t\t// take away clg\n// \t\tconsole.log(searchFlightNumber(flightNumber));\n\n// \t\tsetErrorMessage(\"\");\n// \t\treturn (flight = flightNumber);\n\n// \t} else if (flightNumber.length === 6 && validateSixChar(flightNumber)) {\n// \t\tiata = flightNumber.slice(0, 2);\n// \t\tflight = flightNumber.slice(2, 6);\n\n// \t\t// take away clg\n// \t\tconsole.log(searchFlight(iata, flight));\n\n// \t\tsetErrorMessage(\"\");\n// \t\treturn [iata, flight];\n\n// \t} else if (\n// \t\t!flightNumber.length ||\n// \t\t!validateFourChar(flightNumber) ||\n// \t\t!validateSixChar(flightNumber)\n// \t) {\n// \t\t// console.log(\"set error message\");\n// \t\tsetErrorMessage(\n// \t\t\t\"Flight number must be four numbers or two letters followed by four numbers.\"\n// \t\t);\n// \t}\n// }\n"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,MAA5B,EAAoC;EAC1C,IAAIC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAzB,CAD0C,CAE1C;EACA;EACA;;EAEAC,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkBC,MAAlB,EAN0C,CAQ1C;;EACA,IAAIO,YAAY,GAAG,IAAnB;EACA,IAAIC,WAAW,GAAG,IAAlB;EAEA,IAAIC,MAAM,GACT,qDACAR,MADA,GAEA,iBAFA,GAGAM,YAHA,GAIA,gBAJA,GAKAC,WAND;EAQAE,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,CAAmB,UAAUC,QAAV,EAAoB;IACtC;IACAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAUG,IAAV,EAAgB;MACpCT,OAAO,CAACC,GAAR,CAAYQ,IAAZ;IACA,CAFD;EAGA,CALD;AAMA;AAED,OAAO,SAASC,kBAAT,CAA4Bf,MAA5B,EAAoC;EAC1C;EACA,IAAIO,YAAY,GAAG,IAAnB,CAF0C,CAG1C;EACA;;EACA,IAAIN,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAzB;EACA,IAAIK,MAAM,GACT,qDACAR,MADA,GAEA,iBAFA,GAGAM,YAJD;EAMAF,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAZ0C,CAa1C;;EACAC,KAAK,CAACD,MAAD,EAAS;IACbO,MAAM,EAAE,KADK;IAEbC,OAAO,EAAE;MACR,gBAAgB;IADR,CAFI;IAKbC,IAAI,EAAE;EALO,CAAT,CAAL,CAOEP,IAPF,CAOQQ,GAAD,IAASd,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAPhB,EAQER,IARF,CAQQG,IAAD,IAAUT,OAAO,CAACC,GAAR,CAAYQ,IAAZ,CARjB;AASA,C,CAED;;AACA,OAAO,SAASM,eAAT,CAAyBb,YAAzB,EAAuC;EAC7C,IAAIc,KAAK,GAAG,wBAAZ;EACA,OAAOA,KAAK,CAACC,IAAN,CAAWC,MAAM,CAAChB,YAAD,CAAjB,CAAP;AACA;AAED,OAAO,SAASiB,gBAAT,CAA0BjB,YAA1B,EAAwC;EAC9C,IAAIc,KAAK,GAAG,SAAZ;EACA,OAAOA,KAAK,CAACC,IAAN,CAAWC,MAAM,CAAChB,YAAD,CAAjB,CAAP;AACA,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}