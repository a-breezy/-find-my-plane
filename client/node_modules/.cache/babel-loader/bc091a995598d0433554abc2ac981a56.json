{"ast":null,"code":"var _jsxFileName = \"/Users/a.breezy/development/react-projects/find-my-plane/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\"; // status comp will render once data is returned from API\n\nimport Status from \"./components/Status\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [flightStatus] = useState([{\n    name: \"Find My Plane\"\n  }, {\n    name: \"On Time\"\n  }, {\n    name: \"Delayed\"\n  }, {\n    name: \"Cancelled\"\n  }]);\n  const [status, setStatus] = useState(flightStatus[0]);\n  useEffect(() => {\n    document.title = status.name;\n  }, [status]); // set up cors\n\n  const makeApiCall = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/cors\", {\n        mode: \"cors\"\n      });\n      const data = await response.json();\n      console.log({\n        data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    makeApiCall();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: status.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        flightStatus: flightStatus,\n        setStatus: setStatus,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"9XXXzljFPDHY9gxOXwoFifWkNC8=\");\n\n_c = App;\nexport default App; // eslint-disable-next-line no-lone-blocks\n\n{\n  /* change out:\n  - Delayed, ontime and cancelled should all be broken down\n  \t- title haxppens in app.js\n  \t- flight status happens in a new Component\n  \t- buttons happen in their own Component\n  \t\t- buttons should be mapped over with category to give key\n  - everything should happen dynamically and simply with state change\n  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","Status","App","flightStatus","name","status","setStatus","document","title","makeApiCall","response","fetch","mode","data","json","console","log","e"],"sources":["/Users/a.breezy/development/react-projects/find-my-plane/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport SearchBar from \"./components/SearchBar\";\n\n// status comp will render once data is returned from API\nimport Status from \"./components/Status\";\n\nfunction App() {\n\tconst [flightStatus] = useState([\n\t\t{ name: \"Find My Plane\" },\n\t\t{ name: \"On Time\" },\n\t\t{ name: \"Delayed\" },\n\t\t{ name: \"Cancelled\" },\n\t]);\n\tconst [status, setStatus] = useState(flightStatus[0]);\n\n\tuseEffect(() => {\n\t\tdocument.title = status.name;\n\t}, [status]);\n\n\t// set up cors\n\tconst makeApiCall = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\"http://localhost:3000/cors\", {\n\t\t\t\tmode: \"cors\",\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log({ data });\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tmakeApiCall();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<main className=\"App-body\">\n\t\t\t\t<h1>{status.name}</h1>\n\t\t\t\t<SearchBar\n\t\t\t\t\tflightStatus={flightStatus}\n\t\t\t\t\tsetStatus={setStatus}\n\t\t\t\t\tstatus={status}\n\t\t\t\t/>\n\t\t\t\t{/* <Status /> */}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* change out:\n\t- Delayed, ontime and cancelled should all be broken down\n\t\t- title haxppens in app.js\n\t\t- flight status happens in a new Component\n\t\t- buttons happen in their own Component\n\t\t\t- buttons should be mapped over with category to give key\n\t- everything should happen dynamically and simply with state change\n*/\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd,MAAM,CAACC,YAAD,IAAiBL,QAAQ,CAAC,CAC/B;IAAEM,IAAI,EAAE;EAAR,CAD+B,EAE/B;IAAEA,IAAI,EAAE;EAAR,CAF+B,EAG/B;IAAEA,IAAI,EAAE;EAAR,CAH+B,EAI/B;IAAEA,IAAI,EAAE;EAAR,CAJ+B,CAAD,CAA/B;EAMA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACK,YAAY,CAAC,CAAD,CAAb,CAApC;EAEAJ,SAAS,CAAC,MAAM;IACfQ,QAAQ,CAACC,KAAT,GAAiBH,MAAM,CAACD,IAAxB;EACA,CAFQ,EAEN,CAACC,MAAD,CAFM,CAAT,CATc,CAad;;EACA,MAAMI,WAAW,GAAG,YAAY;IAC/B,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;QAC1DC,IAAI,EAAE;MADoD,CAA/B,CAA5B;MAGA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAY;QAAEH;MAAF,CAAZ;IACA,CAND,CAME,OAAOI,CAAP,EAAU;MACXF,OAAO,CAACC,GAAR,CAAYC,CAAZ;IACA;EACD,CAVD;;EAWAlB,SAAS,CAAC,MAAM;IACfU,WAAW;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACC;IAAK,SAAS,EAAC,KAAf;IAAA,uBACC;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACC;QAAA,UAAKJ,MAAM,CAACD;MAAZ;QAAA;QAAA;QAAA;MAAA,QADD,eAEC,QAAC,SAAD;QACC,YAAY,EAAED,YADf;QAEC,SAAS,EAAEG,SAFZ;QAGC,MAAM,EAAED;MAHT;QAAA;QAAA;QAAA;MAAA,QAFD;IAAA;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAaA;;GA1CQH,G;;KAAAA,G;AA4CT,eAAeA,GAAf,C,CAEA;;AACA;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC"},"metadata":{},"sourceType":"module"}